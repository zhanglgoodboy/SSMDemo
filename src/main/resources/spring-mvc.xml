<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.3.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
">
        <!--spring包扫描-->
    <context:component-scan base-package="org.lanqiao"/>
    <!--开启springMVC注解支持-->
    <mvc:annotation-driven />
    <!-- 定义跳转的文件的前后缀 ，视图模式配置-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <!--spring-mybatis.xml的配置-->
    <!--spring包扫描-->
    <context:component-scan base-package="org.lanqiao"/>
    <!--数据源-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://127.0.0.1:3306/test?useUnicode=yes&amp;characterEncoding=UTF-8"/>
        <property name="username" value="root"/>
        <property name="password" value="123"/>
        <property name="maxActive" value="10"/>
        <property name="maxIdle" value="2"/>
        <property name="maxWait" value="12000"/>
    </bean>
    <!--mybatis和spring整合-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--引入sqlSessionFactory-->
        <property name="dataSource" ref="dataSource"/>
        <!--mybatis全局配置-->
        <property name="configuration">
            <bean class="org.apache.ibatis.session.Configuration">
                <!--驼峰命名转换-->
                <property name="mapUnderscoreToCamelCase" value="true"/>
                <!--是否开启缓存-->
                <property name="cacheEnabled" value="false"/>
                <!--是否开启懒加载-->
                <property name="lazyLoadingEnabled" value="false"/>
                <!--允许 JDBC 支持自动生成主键，需要驱动兼容-->
                <property name="useGeneratedKeys" value="true"/>
            </bean>
        </property>
        <!--扫描sql配置文件:mapper所需要的xml  classpath是代码编译后class文件的路径-->
        <property name="mapperLocations" value="classpath*:mapper/*.xml"/>
    </bean>
    <!--dao接口所在包名,Spring会自动查找其下的类-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="org.lanqiao.dao"/>
    </bean>
    <!--aop相关配置-->
    <bean id="aspectBean" class="org.lanqiao.aop.LogAOP"/>
    <aop:config>
        <!--配置切面-->
        <aop:aspect id="aspect" ref="aspectBean">
            <!--配置com.lanqiao.spring.service包下的所有类或接口的方法-->
            <aop:pointcut id="logService" expression="execution(* org.lanqiao.service.*.*(..))"/>
            <!--前置通知-->
            <aop:before method="somethingBefore" pointcut-ref="logService"/>
            <!--后置通知-->
            <aop:after method="somethingAfter" pointcut-ref="logService"/>
            <!--环绕通知-->
            <aop:after method="somethingAround" pointcut-ref="logService"/>
        </aop:aspect>
    </aop:config>

    <!--mvc跨域配置-->
    <mvc:cors>
        <mvc:mapping path="/**"
                     allowed-origins="*"
                     allowed-methods="GET,PUT,POST,DELETE"
                     allowed-headers="X-Requested-With,Origin,Content-Type,Accept,Authorization"/>
    </mvc:cors>
    <!--对静态资源不做拦截,交给web容器-->
    <mvc:default-servlet-handler/>
</beans>